(()=>{"use strict";var e={826:(e,n,t)=>{t.d(n,{Z:()=>i});var o=t(537),r=t.n(o),a=t(645),d=t.n(a)()(r());d.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,400;1,700&family=Signika+Negative:wght@700&display=swap);"]),d.push([e.id,'*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark: #202020;\n  --semi-dark: #242424;\n  --light-dark: #282828;\n  --lightest-dark: #363636;\n  --white: #ffffff;\n  --gray: #a9a9a9;\n  --red: #ff7066;\n  --area: "logo ..." "projects projects" "footer footer";\n  --cont: none;\n  --proj: block;\n}\n\nhtml {\n  font-size: 16px;\n  font-weight: 400;\n  font-family: "Roboto", sans-serif;\n}\n\nbody {\n  background: black;\n  overflow: hidden;\n}\n\n.app {\n  display: grid;\n  grid-template-columns: minmax(100px, 400px) 1fr;\n  grid-template-rows: 1fr 6fr 0.3fr;\n  grid-template-areas:\n    "logo logo"\n    "projects content"\n    "footer footer";\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  background: var(--light-dark);\n  color: var(--white);\n}\n.projects {\n  box-shadow: 0px -2px 4px -1px rgba(0, 0, 0, 1);\n  grid-area: projects;\n  padding: 1em;\n  background: var(--semi-dark);\n  z-index: 2;\n}\n\n.logo-wrapper {\n  background: var(--light-dark);\n  padding: 2em;\n  display: flex;\n  align-items: center;\n  gap: 1.5em;\n  position: relative;\n}\n\n.heading {\n  min-width: max-content;\n}\n\n.heading:hover {\n  cursor: default;\n}\n.logo {\n  height: 70px;\n}\n\n.project {\n  font-size: 1.2rem;\n  padding: 0.4em;\n  border-radius: 0.2em;\n  margin-bottom: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n}\n\n.todo-number {\n  color: var(--red);\n}\n\n.todo {\n  display: flex;\n  gap: 1em;\n  align-items: center;\n  margin: 0 auto;\n  margin-bottom: 0.5em;\n  padding: 0.3em;\n  border-radius: 0.3em;\n  max-width: 90%;\n}\n\n.todo-name-input {\n  appearance: none;\n  border: none;\n  outline: none;\n  font-size: 1rem;\n  background: var(--dark);\n  color: inherit;\n  width: max-content;\n}\n\n.todo:hover .todo-name-input {\n  background: var(--lightest-dark);\n}\n\n.todo-name {\n  margin-right: auto;\n  min-width: max-content;\n}\n\n.todo > img {\n  height: 30px;\n}\n\n.todos {\n  box-shadow: 0px -2px 4px -1px rgba(0, 0, 0, 1);\n  grid-area: content;\n  background-color: var(--dark);\n  padding: 3em;\n}\n\n.ball {\n  width: 30px;\n  height: 30px;\n  background: #fccb06;\n  border-radius: 50%;\n  display: none;\n  position: absolute;\n  bottom: -50px;\n  z-index: 9999;\n}\n\n.ball:hover {\n  cursor: pointer;\n  background: white;\n}\n\n@media screen and (max-width: 600px) {\n  .projects {\n    display: var(--proj);\n    padding-top: 4em;\n  }\n\n  .todos {\n    display: var(--cont);\n    padding-top: 4em;\n  }\n  .app {\n    grid-template-areas: var(--area);\n  }\n\n  .ball {\n    display: block;\n  }\n}\n\n.project:hover,\n.bg,\n.todo:hover,\n.add-project:hover,\n.add-todo:hover {\n  background: var(--lightest-dark);\n  cursor: pointer;\n}\n\n.expanded-wrapper {\n  display: hidden;\n}\n\n.visible {\n  display: grid;\n  place-items: center;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  position: absolute;\n  z-index: 9999;\n  background: rgba(19, 19, 22, 0.171);\n}\n\n.todo-expanded {\n  width: 80%;\n  height: 80%;\n  background-color: aqua;\n}\n\n.add-project,\n.add-todo {\n  font-size: 1.2rem;\n  padding: 0.4em;\n  border-radius: 0.2em;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 1em;\n}\n\n.add-todo {\n  margin: 0 auto;\n  max-width: 90%;\n}\n\n.add-icon {\n  height: 30px;\n}\n\n.project-add-wrap {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n\n.project-add-wrap > button {\n  flex-basis: 48%;\n  border: none;\n  border-radius: 0.5em;\n  padding: 0.7em;\n  font-family: inherit;\n  font-size: 1rem;\n}\n\n.project-add-wrap > button:hover {\n  background: var(--gray);\n  cursor: pointer;\n}\n\n.project-add-inp {\n  flex-basis: 100%;\n  appearance: none;\n  font-size: 1rem;\n  padding: 0.3em;\n  font-family: inherit;\n  outline: none;\n  border: none;\n  margin-bottom: 0.3em;\n  border-radius: 0.2em;\n}\n\n/* UTILITYCLASS START */\n\n.hidden {\n  display: none;\n}\n/* UTILITY CLASS END */\n',"",{version:3,sources:["webpack://./source/app/style.css"],names:[],mappings:"AACA;;;EAGE,SAAS;EACT,UAAU;EACV,sBAAsB;AACxB;;AAEA;EACE,eAAe;EACf,oBAAoB;EACpB,qBAAqB;EACrB,wBAAwB;EACxB,gBAAgB;EAChB,eAAe;EACf,cAAc;EACd,sDAAsD;EACtD,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,eAAe;EACf,gBAAgB;EAChB,iCAAiC;AACnC;;AAEA;EACE,iBAAiB;EACjB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,+CAA+C;EAC/C,iCAAiC;EACjC;;;mBAGiB;EACjB,YAAY;EACZ,aAAa;EACb,gBAAgB;EAChB,6BAA6B;EAC7B,mBAAmB;AACrB;AACA;EACE,8CAA8C;EAC9C,mBAAmB;EACnB,YAAY;EACZ,4BAA4B;EAC5B,UAAU;AACZ;;AAEA;EACE,6BAA6B;EAC7B,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,UAAU;EACV,kBAAkB;AACpB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,eAAe;AACjB;AACA;EACE,YAAY;AACd;;AAEA;EACE,iBAAiB;EACjB,cAAc;EACd,oBAAoB;EACpB,qBAAqB;EACrB,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,QAAQ;EACR,mBAAmB;EACnB,cAAc;EACd,oBAAoB;EACpB,cAAc;EACd,oBAAoB;EACpB,cAAc;AAChB;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,aAAa;EACb,eAAe;EACf,uBAAuB;EACvB,cAAc;EACd,kBAAkB;AACpB;;AAEA;EACE,gCAAgC;AAClC;;AAEA;EACE,kBAAkB;EAClB,sBAAsB;AACxB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,8CAA8C;EAC9C,kBAAkB;EAClB,6BAA6B;EAC7B,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,kBAAkB;EAClB,aAAa;EACb,kBAAkB;EAClB,aAAa;EACb,aAAa;AACf;;AAEA;EACE,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE;IACE,oBAAoB;IACpB,gBAAgB;EAClB;;EAEA;IACE,oBAAoB;IACpB,gBAAgB;EAClB;EACA;IACE,gCAAgC;EAClC;;EAEA;IACE,cAAc;EAChB;AACF;;AAEA;;;;;EAKE,gCAAgC;EAChC,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,YAAY;EACZ,aAAa;EACb,MAAM;EACN,OAAO;EACP,kBAAkB;EAClB,aAAa;EACb,mCAAmC;AACrC;;AAEA;EACE,UAAU;EACV,WAAW;EACX,sBAAsB;AACxB;;AAEA;;EAEE,iBAAiB;EACjB,cAAc;EACd,oBAAoB;EACpB,qBAAqB;EACrB,aAAa;EACb,mBAAmB;EACnB,QAAQ;AACV;;AAEA;EACE,cAAc;EACd,cAAc;AAChB;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,aAAa;EACb,eAAe;EACf,8BAA8B;AAChC;;AAEA;EACE,eAAe;EACf,YAAY;EACZ,oBAAoB;EACpB,cAAc;EACd,oBAAoB;EACpB,eAAe;AACjB;;AAEA;EACE,uBAAuB;EACvB,eAAe;AACjB;;AAEA;EACE,gBAAgB;EAChB,gBAAgB;EAChB,eAAe;EACf,cAAc;EACd,oBAAoB;EACpB,aAAa;EACb,YAAY;EACZ,oBAAoB;EACpB,oBAAoB;AACtB;;AAEA,uBAAuB;;AAEvB;EACE,aAAa;AACf;AACA,sBAAsB",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,400;1,700&family=Signika+Negative:wght@700&display=swap");\n*,\n*::after,\n*::before {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark: #202020;\n  --semi-dark: #242424;\n  --light-dark: #282828;\n  --lightest-dark: #363636;\n  --white: #ffffff;\n  --gray: #a9a9a9;\n  --red: #ff7066;\n  --area: "logo ..." "projects projects" "footer footer";\n  --cont: none;\n  --proj: block;\n}\n\nhtml {\n  font-size: 16px;\n  font-weight: 400;\n  font-family: "Roboto", sans-serif;\n}\n\nbody {\n  background: black;\n  overflow: hidden;\n}\n\n.app {\n  display: grid;\n  grid-template-columns: minmax(100px, 400px) 1fr;\n  grid-template-rows: 1fr 6fr 0.3fr;\n  grid-template-areas:\n    "logo logo"\n    "projects content"\n    "footer footer";\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  background: var(--light-dark);\n  color: var(--white);\n}\n.projects {\n  box-shadow: 0px -2px 4px -1px rgba(0, 0, 0, 1);\n  grid-area: projects;\n  padding: 1em;\n  background: var(--semi-dark);\n  z-index: 2;\n}\n\n.logo-wrapper {\n  background: var(--light-dark);\n  padding: 2em;\n  display: flex;\n  align-items: center;\n  gap: 1.5em;\n  position: relative;\n}\n\n.heading {\n  min-width: max-content;\n}\n\n.heading:hover {\n  cursor: default;\n}\n.logo {\n  height: 70px;\n}\n\n.project {\n  font-size: 1.2rem;\n  padding: 0.4em;\n  border-radius: 0.2em;\n  margin-bottom: 0.5rem;\n  display: flex;\n  justify-content: space-between;\n}\n\n.todo-number {\n  color: var(--red);\n}\n\n.todo {\n  display: flex;\n  gap: 1em;\n  align-items: center;\n  margin: 0 auto;\n  margin-bottom: 0.5em;\n  padding: 0.3em;\n  border-radius: 0.3em;\n  max-width: 90%;\n}\n\n.todo-name-input {\n  appearance: none;\n  border: none;\n  outline: none;\n  font-size: 1rem;\n  background: var(--dark);\n  color: inherit;\n  width: max-content;\n}\n\n.todo:hover .todo-name-input {\n  background: var(--lightest-dark);\n}\n\n.todo-name {\n  margin-right: auto;\n  min-width: max-content;\n}\n\n.todo > img {\n  height: 30px;\n}\n\n.todos {\n  box-shadow: 0px -2px 4px -1px rgba(0, 0, 0, 1);\n  grid-area: content;\n  background-color: var(--dark);\n  padding: 3em;\n}\n\n.ball {\n  width: 30px;\n  height: 30px;\n  background: #fccb06;\n  border-radius: 50%;\n  display: none;\n  position: absolute;\n  bottom: -50px;\n  z-index: 9999;\n}\n\n.ball:hover {\n  cursor: pointer;\n  background: white;\n}\n\n@media screen and (max-width: 600px) {\n  .projects {\n    display: var(--proj);\n    padding-top: 4em;\n  }\n\n  .todos {\n    display: var(--cont);\n    padding-top: 4em;\n  }\n  .app {\n    grid-template-areas: var(--area);\n  }\n\n  .ball {\n    display: block;\n  }\n}\n\n.project:hover,\n.bg,\n.todo:hover,\n.add-project:hover,\n.add-todo:hover {\n  background: var(--lightest-dark);\n  cursor: pointer;\n}\n\n.expanded-wrapper {\n  display: hidden;\n}\n\n.visible {\n  display: grid;\n  place-items: center;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  position: absolute;\n  z-index: 9999;\n  background: rgba(19, 19, 22, 0.171);\n}\n\n.todo-expanded {\n  width: 80%;\n  height: 80%;\n  background-color: aqua;\n}\n\n.add-project,\n.add-todo {\n  font-size: 1.2rem;\n  padding: 0.4em;\n  border-radius: 0.2em;\n  margin-bottom: 0.5rem;\n  display: flex;\n  align-items: center;\n  gap: 1em;\n}\n\n.add-todo {\n  margin: 0 auto;\n  max-width: 90%;\n}\n\n.add-icon {\n  height: 30px;\n}\n\n.project-add-wrap {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n}\n\n.project-add-wrap > button {\n  flex-basis: 48%;\n  border: none;\n  border-radius: 0.5em;\n  padding: 0.7em;\n  font-family: inherit;\n  font-size: 1rem;\n}\n\n.project-add-wrap > button:hover {\n  background: var(--gray);\n  cursor: pointer;\n}\n\n.project-add-inp {\n  flex-basis: 100%;\n  appearance: none;\n  font-size: 1rem;\n  padding: 0.3em;\n  font-family: inherit;\n  outline: none;\n  border: none;\n  margin-bottom: 0.3em;\n  border-radius: 0.2em;\n}\n\n/* UTILITYCLASS START */\n\n.hidden {\n  display: none;\n}\n/* UTILITY CLASS END */\n'],sourceRoot:""}]);const i=d},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var d={};if(o)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(d[s]=!0)}for(var A=0;A<e.length;A++){var c=[].concat(e[A]);o&&d[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),r&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=r):c[4]="".concat(r)),n.push(c))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},d=[],i=0;i<e.length;i++){var s=e[i],A=o.base?s[0]+o.base:s[0],c=a[A]||0,l="".concat(A," ").concat(c);a[A]=c+1;var p=t(l),m={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)n[p].references++,n[p].updater(m);else{var u=r(m,o);o.byIndex=i,n.splice(i,0,{identifier:l,updater:u,references:1})}d.push(l)}return d}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var d=0;d<a.length;d++){var i=t(a[d]);n[i].references--}for(var s=o(e,r),A=0;A<a.length;A++){var c=t(a[A]);0===n[c].references&&(n[c].updater(),n.splice(c,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");if(o.length)for(var r=o.length-1;r>-1&&!e;)e=o[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),a=t(569),d=t.n(a),i=t(565),s=t.n(i),A=t(216),c=t.n(A),l=t(589),p=t.n(l),m=t(826),u={};u.styleTagTransform=p(),u.setAttributes=s(),u.insert=d().bind(null,"head"),u.domAPI=r(),u.insertStyleElement=c(),n()(m.Z,u),m.Z&&m.Z.locals&&m.Z.locals;class E{static projects={};static addProject(e){e.name in this.projects||(this.projects[e.name]=e)}static removeProject(e){}}class g{constructor(e){this.name=e,this.todos={}}addTodo(e){this.todos[e.name]=e}removeTodo(e){e in this.todos&&delete this.todos[e]}}class h{constructor(e,n){this.name=e,this.date=n}changeProp(e,n){e in this&&(this[e]=n)}}class C{static createTodo(e,n,t){E.projects[e].addTodo(new h(n,t))}static createProject(e){return E.addProject(new g(e)),E.projects[e]}}const f=t.p+"3edf0def1f729102703b.svg",b=t.p+"7cf5cf0ddd376eb24e86.svg",v=t.p+"13536096c8ca926ce0a7.svg",B=t.p+"92550b0a76d7865dce47.svg";class y{static projectsEL=document.querySelector(".projects");static todosEl=document.querySelector(".todos");static currentProject=E.projects.default;static addProjectEL=document.querySelector(".add-project");static ball=document.querySelector(".ball");static app=document.querySelector(".app");static displayProjects(){this.projectsEL.innerHTML="",console.log(this.currentProjectIndex);for(let[e,n]of Object.entries(E.projects)){const t=document.createElement("div"),o=document.createElement("div"),r=document.createElement("div");t.classList.add("project"),o.classList.add("project-name"),r.classList.add("todo-number"),o.textContent=e,o.dataset.name=n.name,r.textContent=Object.keys(n.todos).length,t.append(o,r),this.projectsEL.appendChild(t)}const e=document.createElement("div");e.classList.add("add-project"),e.innerHTML=`    \n    <img src="${v}" alt="add-icon" class="add-icon" />\n    <div class="add-project-text">Add project</div>`,this.projectsEL.appendChild(e),e.addEventListener("click",this.displayAdd),Object.keys(E.projects).length>0&&this.chooseCurrentProject()}static chooseCurrentProject(){document.querySelectorAll(".project-name")[this.currentProjectIndex].classList.add("selected"),document.querySelectorAll(".project")[this.currentProjectIndex].classList.add("bg")}static displayTodos(){if(this.clearTodos(),Object.keys(E.projects).length<1)return;for(let[e,n]of Object.entries(this.getCurrentProject().todos)){const t=document.createElement("div");t.classList.add("todo"),t.dataset.name=e;const o=n.date?`<div class="date-str">${n.date}</div>`:'<input type="date" class="date" />';t.innerHTML=`        \n        <img src="${f}" alt="" class="todo-clear" />\n        <div class="todo-name">${e}</div>\n        ${o}\n        <img src="${b}" alt="" class="todo-delete" />`,this.todosEl.appendChild(t)}const e=document.createElement("div");e.classList.add("add-todo"),e.innerHTML=`    \n    <img src="${v}" alt="add-icon" class="add-icon" />\n    <div class="add-todo-text">Add todo</div>`,this.todosEl.appendChild(e),e.addEventListener("click",this.displayAdd),this.updateDateEventListeners(),this.updateTodoNameEventListeners(),this.updateDeleteAndCompleteEventListeners()}static updateDateEventListeners(){document.querySelectorAll(".date").forEach((e=>{e.addEventListener("change",(n=>{const t=this.getCurrentProject().todos,o=n.target.parentElement,r=o.dataset.name,a=n.target.value,d=n.target.nextElementSibling,i=document.createElement("div");i.classList.add("date-str"),i.textContent=a,t[r].changeProp("date",a),o.insertBefore(i,d),i.addEventListener("click",(n=>{o.insertBefore(e,d),i.remove()})),e.remove()}))}))}static updateTodoNameEventListeners(){document.querySelectorAll(".todo-name").forEach((e=>{e.addEventListener("click",(n=>{console.log("click");const t=this.getCurrentProject().todos,o=n.target.parentElement,r=o.dataset.name,a=n.target.nextElementSibling,d=document.createElement("input");d.classList.add("todo-name","todo-name-input"),d.value=e.textContent,o.insertBefore(d,a),document.addEventListener("keyup",(n=>{if("Enter"===n.key){if(""===d.value)return void alert("Bro name can't be empty");e.textContent=d.value,t[r].changeProp("name",d.value),o.insertBefore(e,a),d.remove()}})),e.remove()}))}))}static updateDeleteAndCompleteEventListeners(){const e=e=>{const n=e.target.parentElement.dataset.name;this.getCurrentProject().removeTodo(n),e.target.parentElement.remove(),this.displayProjects()},n=document.querySelectorAll(".todo-clear"),t=document.querySelectorAll(".todo-delete");n.forEach((n=>{n.addEventListener("click",e)})),t.forEach((n=>{n.addEventListener("click",e)}))}static getCurrentProject(){const e=document.querySelector(".selected").dataset.name;return E.projects[e]}static updateEventListenersOnProjects(){const e=document.querySelectorAll(".project");e.forEach(((n,t)=>{n.addEventListener("click",(o=>{e.forEach((e=>{e.classList.contains("bg")&&(e.firstElementChild.classList.remove("selected"),e.classList.remove("bg"))})),y.currentProjectIndex=t,n.firstChild.classList.add("selected"),n.classList.add("bg"),y.displayTodos()}))}))}static clearTodos(){document.querySelectorAll(".todo").forEach((e=>{e.remove()})),document.querySelector(".add-todo")?.remove()}static updateEventListenersOnTodos(){document.querySelectorAll(".todos").forEach((e=>{e.addEventListener("click",(e=>{}))}))}static displayAdd(e){let n=null,t=!1;e.target.classList.contains("add-project")||e.target.parentElement.classList.contains("add-project")?n=e.target.classList.contains("add-project")?e.target:e.target.parentElement:(n=e.target.classList.contains("add-todo")?e.target:e.target.parentElement,t=!0);const o=document.createElement("div");o.classList.add("project-add-wrap"),o.innerHTML='\n    <input type="text" class="project-add-inp" />\n    <button class="project-add-btn">Add</button>\n    <button class="project-add-cancell-btn">Cancell</button>\n    ',n.parentElement.appendChild(o);let r=null,a=null;t?(r=y.todosEl.querySelector(".project-add-btn"),a=y.todosEl.querySelector(".project-add-cancell-btn")):(r=y.projectsEL.querySelector(".project-add-btn"),a=y.projectsEL.querySelector(".project-add-cancell-btn")),a.addEventListener("click",(e=>{n.classList.toggle("hidden"),o.remove()})),r.addEventListener("click",(e=>{""!==e.target.previousElementSibling.value?t?(y.addTodo(y.getCurrentProject().name,e.target.previousElementSibling.value),y.displayTodos(),r.parentElement.remove(),y.displayProjects(),y.updateEventListenersOnProjects(),n.remove()):(y.addProject(e.target.previousElementSibling.value),y.currentProjectIndex=Object.keys(E.projects).length-1,y.displayProjects(),y.updateEventListenersOnProjects(),y.displayTodos(),n.remove()):alert("Bro project name can't be emtpy")})),n.classList.toggle("hidden")}static addProject(e){C.createProject(e)}static addTodo(e,n){C.createTodo(e,n)}static loadUI(){this.currentProjectIndex=0,this.todoViw=!1,this.displayProjects(),this.displayTodos(),document.querySelector(".logo").src=B,this.ball.addEventListener("click",(()=>{y.todoViw?(y.todosEl.style.setProperty("--cont","none"),y.projectsEL.style.setProperty("--proj","block"),y.app.style.setProperty("--area","\n        'logo logo'\n        'projects projects'\n        'footer footer'"),y.todoViw=!y.todoViw):(y.todosEl.style.setProperty("--cont","block"),y.projectsEL.style.setProperty("--proj","none"),y.app.style.setProperty("--area",'"logo logo"\n          "content content"\n          "footer footer"'),y.todoViw=!y.todoViw)}))}}y.loadUI()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,